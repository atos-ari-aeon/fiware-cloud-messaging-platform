# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.  
  config.vm.box = "trusty"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"
  
  config.vm.hostname = "aeon"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  # config.vm.box_url = "http://domain.com/path/to/above.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080
  #config.vm.network :forwarded_port, guest: 3000, host: 3000, auto_correct: true
  
  config.vm.network :forwarded_port, guest: 27017, host: 27017, auto_correct: true # mongodb
  config.vm.network :forwarded_port, guest: 3000, host: 3000, auto_correct: true #AEON rest
  config.vm.network :forwarded_port, guest: 8000, host: 8000, auto_correct: true #AEON frontend
  config.vm.network :forwarded_port, guest: 15672, host: 15672, auto_correct: true # Rabbitmq Admin
  config.vm.network :forwarded_port, guest: 5858, host: 5858, auto_correct: true # node-inspector

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
    
  config.vm.synced_folder "~/Projects", "/vagrant"
  config.vm.synced_folder "~/data", "/vagrant_data"
  config.ssh.private_key_path = [ '~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa' ]
  config.ssh.forward_agent = true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
    
    #  config.vm.provision :shell do |shell|
    #    shell.inline = "/usr/bin/apt-get update"
    #  end

    #  config.vm.provider :virtualbox do |vb|
    #    # Don't boot with headless mode
    #    #vb.gui = true
    #    #
    #    # Use VBoxManage to customize the VM. For example to change memory:
    #    vb.customize ["modifyvm", :id, "--memory", "2048"]
    #    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    #    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    #    vb.name = "aeon"
    #  end
    
    config.vm.provider "virtualbox" do |v|
          host = RbConfig::CONFIG['host_os']

          # Give VM 1/4 system memory & access to all cpu cores on the host
          if host =~ /darwin/
            cpus = `sysctl -n hw.ncpu`.to_i
            # sysctl returns Bytes and we need to convert to MB
            mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4
          elsif host =~ /linux/
            cpus = `nproc`.to_i
            # meminfo shows KB and we need to convert to MB
            mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 4
          else # sorry Windows folks, I can't help you
            cpus = 2
            mem = 1024
          end

          v.customize ["modifyvm", :id, "--memory", mem]
          v.customize ["modifyvm", :id, "--cpus", cpus]
          v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
          v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        end

    #  config.vm.provider :virtualbox do |vb|
    #    vb.customize [
    #      "modifyvm", :id,
    #      "--memory", "512"
    #    ]
    #  end

    ## add gitlab to the list of known_hosts
    #    config.vm.provision :shell do |shell|
    #      shell.inline = "mkdir $1 && touch $2 && ssh-keyscan -H $3 >> $2 && chmod 600 $2"
    #      shell.args = %q{/root/.ssh /root/.ssh/known_hosts "http://gitlab.atosresearch.eu/"}
    #    end

    config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.module_path    = "puppet/modules"
    puppet.manifest_file  = "main.pp"
    puppet.options        = [
                              '--verbose',
                              #'--debug',
                            ]
    end
end
